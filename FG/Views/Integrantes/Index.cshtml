@model IEnumerable<FG.Models.Integrante>

@{
    ViewBag.Title = "Index";
}

@if (!string.IsNullOrEmpty(ViewBag.Banner))
{
    @Html.Raw("<img src=\"data:image/png;base64," + ViewBag.Banner + "\" class=\"img-responsive center-block\" />")
}
else
{
    <h2>Integrantes</h2>
}

@if (Session["sessionStore"] != null && (Session["sessionStore"] as FG.Models.SessionStore).Usuario.Rol=="Administrador")
 {
<p>
    @Html.ActionLink("Agregar", "Create")
</p>
}
<style>
    .card{
        border:1px solid black; float:left; text-align:center; overflow:hidden;
    }
    .zoomin{
        transform: scale(1);
        transition-duration: 0.2s;
    }

    .zoomout{
        transform: scale(0.1);
        transition-duration: 0.2s;
    }

    
    .nav-pills > li.active > a, .nav-pills > li.active > a:hover, .nav-pills > li.active > a:focus {
    color:red;
    background-color:black;
    }

</style>

<div class="container">
    <div class="row">
        <ul id="buttons">
            <li id="liTodos"><a href="javascript:ToggleByDivision();">Todos</a> </li>
        </ul>
    </div>
    
    <br />
    @foreach (var item in Model)
    {
        <div class="card col-md-4" data-division="@item.Divisiones">
            <div class="row" style="background-color:black;color:white;font-weight:bold;font-size:24px;">
                @if (string.IsNullOrEmpty(item.Nick))
                {
                    @Html.DisplayFor(modelItem => item.Nombre)
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.Nick)
                }
            </div>
            <div class="row" style=" font-size:18px;">
                @Html.Raw("<label>" + item.Nombre + "</label>")
            </div>
            <div class="row">
                <div class="col-md-12" style="position: relative;">
                    @if (!string.IsNullOrEmpty(item.Foto))
                    {
                        @Html.Raw("<img src=\"data:image/png;base64," + item.Foto + "\" class=\"img-responsive\" style=\"z-index:-1;width:auto;max-height:250px;overflow:hidden; margin:0 auto\" />")
                    }
                    
                    @if (!string.IsNullOrEmpty(item.Email) || !string.IsNullOrEmpty(item.FacebookLink) || !string.IsNullOrEmpty(item.TwitterLink) || !string.IsNullOrEmpty(item.YouTubeLink))
                    {
                        <div style="background-color: #cecece; position: absolute; bottom: 0; opacity: 0.8;width:100%; height:45px;">
                            
                            @if (!string.IsNullOrEmpty(item.Email))
                            {
                                <div style="float:left;width:20%">
                                    @Html.Raw("<a target=\"_blank\" href=\"mailto:" + item.Email + "\"><img src=\"/Content/email-logo.png\" class=\"img-responsive center-block\" style=\"display:block;margin:auto;height:40px;width:40px;\" /></a>")
                                </div>
                            }                            
                            
                            @if (!string.IsNullOrEmpty(item.FacebookLink))
                            {
                                <div style="float: left; width: 18%">
                                    @Html.Raw("<a target=\"_blank\" href=\"" + item.FacebookLink + "\"><img src=\"/Content/FB-logo.png\" class=\"img-responsive center-block\" style=\"display:block;margin:auto;height:40px;width:40px;\" /></a>")
                                </div>
                            }
                            
                            
                            @if (!string.IsNullOrEmpty(item.TwitterLink))
                            {
                                <div style="float: left; width: 18%">
                                    @Html.Raw("<a target=\"_blank\" href=\"" + item.TwitterLink + "\"><img src=\"/Content/Twitter-logo.png\" class=\"img-responsive center-block\" style=\"display:block;margin:auto;height:40px;width:40px;\" /></a>")
                                </div>
                            }
                            
                            @if (!string.IsNullOrEmpty(item.YouTubeLink))
                            {
                                <div style="float: left; width: 18%">
                                    @Html.Raw("<a target=\"_blank\" href=\"" + item.YouTubeLink + "\"><img src=\"/Content/Youtube-logo.png\" class=\"img-responsive center-block\" style=\"display:block;margin:auto;height:40px;width:40px;\" /></a>")
                                </div>

                            } 
                            @if (!string.IsNullOrEmpty(item.TwitchTVLink))
                            {
                                <div style="float: left; width: 18%">
                                    @Html.Raw("<a target=\"_blank\" href=\"" + item.TwitchTVLink+ "\"><img src=\"/Content/twitch-logo.png\" class=\"img-responsive center-block\" style=\"display:block;margin:auto;height:40px;width:40px;\" /></a>")
                                </div>
                            }
                        </div>
                    }

                </div>
            </div>

            @if (Session["sessionStore"] != null && (Session["sessionStore"] as FG.Models.SessionStore).Usuario.Rol=="Administrador")
            {
            <div class="row">
                @Html.ActionLink("Editar", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Eliminar", "Delete", new { id = item.Id })
            </div>
            }
        </div>
    }
</div>

    <hr />
@section Scripts
{
<script>
    function createButtonsDivisions (event) {
        var buttons = [];
        $("div[data-division]").each(function (index) {
            var divisiones = $(this).attr('data-division').split(',');
            for(var i=0;i<divisiones.length;i++)
            {
                if(buttons.indexOf(divisiones[i].trim()) == -1){
                    $("#buttons").append("<li><a href=\"javascript:ToggleByDivision('" + divisiones[i].trim() + "');\">" + divisiones[i].trim() + "</a></li>")
                    buttons.push(divisiones[i].trim());
                }
            }
        })

        $("#buttons").addClass("nav nav-pills");
        $("#liTodos").addClass("active");

        $(".nav.nav-pills li").on("click", function () {
            $(".nav.nav-pills li").removeClass("active");
            $(this).addClass("active");
        });
    };



    function ToggleByDivision(divisionToShow) {
        
        if (!divisionToShow) {
            //show what is hidden
            $(".card").show(function () { 
                $(this).removeClass("zoomout").removeClass("zoomin").addClass("zoomin");
            });
        }
        else
        {


            //show equals
            var equals = $(".card[data-division*='" + divisionToShow + "']");
                equals.show(1,function () {
                    $(this).removeClass("zoomout").removeClass("zoomin").addClass("zoomin");
                    console.log("show", this);
            })

            //hide different
            var differents = $(".card").not("[data-division*='" + divisionToShow + "']");
            var transitionEvent = whichTransitionEvent()
            differents.each(function () {
                this.addEventListener(transitionEvent, ZoomoutAndHide(this));
                $(this).removeClass("zoomin").removeClass("zoomout").addClass("zoomout");
            })
        }
    }

    function ZoomoutAndHide (obj) {
        console.log("hide ", obj)
        this.removeEventListener(whichTransitionEvent(), ZoomoutAndHide);
        $(obj).hide()
    }

    function ToggleAllCards(visible) {
        var cards = $(".card")
        .removeClass("zoomout")
        .removeClass("zoomin");
        if(visible){
            cards.show()
            .addClass("zoomin")
            .removeClass("zoomin")
        }
        else
        {
            //cards.hide();
            cards.addClass("zoomout")
            .one(whichTransitionEvent(), function () {
                $(this).hide().removeClass("zoomout")
            });
        }
    }


    function showOnly(divisionToShow) {
        ToggleAllCards(false);
        $("#li" + divisionToShow).addClass("active");
        $(".card[data-division*='" + divisionToShow + "']")
        .show()
        .addClass("zoomin")
        //.one(whichTransitionEvent(), function () {
        //    $(this)
        //        .removeClass("zoomout")
        //        .show()
        //        .addClass("zoomin");
        //});
    }

    createButtonsDivisions();


    function whichTransitionEvent() {
        var t,
            el = document.createElement("fakeelement");

        var transitions = {
            "transition": "transitionend",
            "OTransition": "oTransitionEnd",
            "MozTransition": "transitionend",
            "WebkitTransition": "webkitTransitionEnd"
        }

        for (t in transitions) {
            if (el.style[t] !== undefined) {
                return transitions[t];
            }
        }
    }

</script>

}
